PROCEDURE "CTA_POST_LINEITEM_DATA" (
	IN IN_ACTION NVARCHAR(25), 
    IN IN_UNIQUE_NAME NVARCHAR(100),
    IN IN_RELEASE_TYPE NVARCHAR(5),  
    IN ST_CR_REQ "ST_CONTRACT_REQUESTS_ASSIGNED", 
	IN ST_LINEITEM "ST_LINEITEMS",
    IN ST_PRICINGTERMS_PRICINGINFO "CTA_PRICINGTERMS_PRICING_INFO",
	IN ST_LINEITEM_ACCOUNTING "CTA_CR_LINEITEM_ACCOUNTING", 
    IN ST_CR_LOG "ST_MASTER_CONTRACT_REQUESTS_EVENTS", 
	OUT OUT_SUCCESS NVARCHAR(100)     
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
--DEFAULT SCHEMA <default_schema_name>
AS
BEGIN

    DECLARE LV_INDEX INTEGER; 
    DECLARE LV_ST_MS_COUNT0 INTEGER; 
    DECLARE LV_ID_COUNT INTEGER; 
    DECLARE LV_CR_COUNT INTEGER; 
    DECLARE LV_CR_LOG_COUNT INTEGER; 
    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_NEW_STATUS INTEGER;
    DECLARE LV_EVENT_NO INTEGER;
    DECLARE LV_EVENT_CODE INTEGER;
    DECLARE LV_SUPPLIER_EMAIL NVARCHAR(100);
    DECLARE LV_REMARK NVARCHAR(100);
    DECLARE LV_SUCCESS_MSG NVARCHAR(100);
    DECLARE LV_SUCCESS_FLAG BOOLEAN;
    DECLARE LV_RELEASE_TYPE NVARCHAR(5);

    -- Local Variable values assigning
    -- SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;

    OUT_SUCCESS  := null;
    LV_SUCCESS_FLAG  := null;
    LV_SUCCESS_MSG  := null;
    LV_NEW_STATUS  := null;
    LV_CR_COUNT  := 0;
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;

    IF ( :IN_ACTION = 'CREATE') THEN
        
        LV_EVENT_CODE := 1;
        LV_NEW_STATUS := 2;
        LV_REMARK := 'CR assigned to Supplier' ;

    --   Get Count for CR by Unique Name
        SELECT COUNT(*) into LV_CR_COUNT FROM "CTA_CONTRACT_REQUESTS_ASSIGNED" 
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        SELECT "VENDOR_EMAIL" into LV_SUPPLIER_EMAIL FROM :ST_CR_REQ
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        IF ( :LV_CR_COUNT > 0) THEN
            DELETE FROM "CTA_CONTRACT_REQUESTS_ASSIGNED" 
            WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
        END IF;
        
        -- Insert into Request assign:	
        INSERT INTO "CTA_CONTRACT_REQUESTS_ASSIGNED"  
        (
            "UNIQUE_NAME","EXTERNAL_ID","TITLE","PREPARER_ID","REQUESTER_EMAIL","VENDOR_ID","VENDOR_NAME","VENDOR_EMAIL","PURCH_ORG","COMPANY_CODE",
            "DESCRIPTION","HIERARCICAL_TYPE","TERM_TYPE","RELEASE_TYPE","STATUS","EFFECTIVE_DATE","EXPIRITION_DATE","CREATED_ON","UPDATED_ON"
        )
        SELECT 	:IN_UNIQUE_NAME,"EXTERNAL_ID","TITLE","PREPARER_ID","REQUESTER_EMAIL","VENDOR_ID","VENDOR_NAME","VENDOR_EMAIL","PURCH_ORG","COMPANY_CODE",
        "DESCRIPTION","HIERARCICAL_TYPE","TERM_TYPE","RELEASE_TYPE",:LV_NEW_STATUS,"EFFECTIVE_DATE","EXPIRITION_DATE",:LV_CURR_TIMESTAMP, null
        FROM :ST_CR_REQ;
    
        LV_SUCCESS_MSG := :IN_UNIQUE_NAME || ' assigned to ' || :LV_SUPPLIER_EMAIL;
        LV_SUCCESS_FLAG := true;  
        
    ELSEIF ( :IN_ACTION = 'VENDOR_UPDATE') THEN
        LV_EVENT_CODE := 2;
        LV_NEW_STATUS := 3;
        LV_REMARK := 'CR updated by Supplier';

        SELECT COUNT(*) into LV_CR_COUNT FROM "CTA_CR_LINEITEMS" 
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        SELECT "RELEASE_TYPE" INTO LV_RELEASE_TYPE FROM "CTA_CONTRACT_REQUESTS_ASSIGNED"
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        
        IF ( :LV_CR_COUNT > 0) THEN
            DELETE FROM "CTA_CR_LINEITEMS" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
            DELETE FROM "CTA_PRICINGTERMS_PRICING_INFO" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
            DELETE FROM "CTA_CR_LINEITEM_ACCOUNTING" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
        END IF;

            INSERT INTO "CTA_CR_LINEITEMS"  
            (
                "UNIQUE_NAME","NUMBERINCOLLECTION","LINETYPE_CATEGORY","LINETYPE_NAME","LINETYPE_UNIQUENAME","TITLE","SUPPLIER_CONTACT","NOTIFICATION_DAYS"
                    ,"CREATION_DATE","AMOUNT","AMOUNT_CURRENCYUNIQUENAME","BILLINGADDRESS","HIDEAMOUNT","HIDEUNITPRICE","ISOBSOLETE","ISRECURRING","ITEMCATEGORY","DESCRIPTION",
                    "SUPPLIERPARTNUMBER","SUPPLIERPARTAUXILIARYID","COMMONCOMMODITYCODE_NAME","COMMONCOMMODITYCODE_UNIQUENAME","COMMONCOMMODITYCODE_DOMAIN","COMMODITYCODE_NAME","COMMODITYCODE_UNIQUENAME",
                    "UNITOFMEASURE_NAME","UNITOFMEASURE_UNIQUENAME","PRICE_AMOUNT","PRICE_AMOUNT_CURRENCYUNIQUENAME","LIMITTYPE","MINAMOUNT_AMOUNT","MINAMOUNT_CURRENCYUNIQUENAME","MAXAMOUNT_AMOUNT","MAXAMOUNT_CURRENCYUNIQUENAME",
                    "MAXAMOUNTTOLERANCEPERCENT","MINQUANTITY","MAXQUANTITY","MAXQUANTITYTOLERANCEPERCENT","MINRELEASEAMOUNT_AMOUNT","MINRELEASEAMOUNT_CURRENCYUNIQUENAME","MAXRELEASEAMOUNT_AMOUNT","MAXRELEASEAMOUNT_CURRENCYUNIQUENAME","MINRELEASEQUANTITY"
                    ,"MAXRELEASEQUANTITY","MAXRELEASETOLERANCEPERCENT","ISHARDRELEASEMINIMUM","ISHARDRELEASEMAXIMUM","ACCOUNTTYPE","SHIPTO","ACCOUNTCATEGORY","SOURCE","CREATOR_ROLE","SOURCE_TYPE","VERIFIERUSER_PASSWORDADAPTER","VERIFIERUSER_UNIQUENAME","VERIFIERUSER_NAME","STARTDATE","PARENTLINENUMBER"
            )
            SELECT "UNIQUE_NAME","NUMBERINCOLLECTION","LINETYPE_CATEGORY","LINETYPE_NAME","LINETYPE_UNIQUENAME","TITLE","SUPPLIER_CONTACT","NOTIFICATION_DAYS"
                ,"CREATION_DATE","AMOUNT","AMOUNT_CURRENCYUNIQUENAME","BILLINGADDRESS","HIDEAMOUNT","HIDEUNITPRICE","ISOBSOLETE","ISRECURRING","ITEMCATEGORY","DESCRIPTION",
                "SUPPLIERPARTNUMBER","SUPPLIERPARTAUXILIARYID","COMMONCOMMODITYCODE_NAME","COMMONCOMMODITYCODE_UNIQUENAME","COMMONCOMMODITYCODE_DOMAIN","COMMODITYCODE_NAME","COMMODITYCODE_UNIQUENAME",
                "UNITOFMEASURE_NAME","UNITOFMEASURE_UNIQUENAME","PRICE_AMOUNT","PRICE_AMOUNT_CURRENCYUNIQUENAME","LIMITTYPE","MINAMOUNT_AMOUNT","MINAMOUNT_CURRENCYUNIQUENAME","MAXAMOUNT_AMOUNT","MAXAMOUNT_CURRENCYUNIQUENAME",
                "MAXAMOUNTTOLERANCEPERCENT","MINQUANTITY","MAXQUANTITY","MAXQUANTITYTOLERANCEPERCENT","MINRELEASEAMOUNT_AMOUNT","MINRELEASEAMOUNT_CURRENCYUNIQUENAME","MAXRELEASEAMOUNT_AMOUNT","MAXRELEASEAMOUNT_CURRENCYUNIQUENAME","MINRELEASEQUANTITY"
                ,"MAXRELEASEQUANTITY","MAXRELEASETOLERANCEPERCENT","ISHARDRELEASEMINIMUM","ISHARDRELEASEMAXIMUM","ACCOUNTTYPE","SHIPTO","ACCOUNTCATEGORY","SOURCE","CREATOR_ROLE","SOURCE_TYPE","VERIFIERUSER_PASSWORDADAPTER","VERIFIERUSER_UNIQUENAME","VERIFIERUSER_NAME","STARTDATE","PARENTLINENUMBER"
            FROM :ST_LINEITEM;

            INSERT INTO "CTA_PRICINGTERMS_PRICING_INFO" 
            SELECT *
            FROM :ST_PRICINGTERMS_PRICINGINFO;

            -- IF (:LV_RELEASE_TYPE = 'N') THEN 

            INSERT INTO "CTA_CR_LINEITEM_ACCOUNTING"  
            SELECT *
            FROM :ST_LINEITEM_ACCOUNTING; 

            -- END IF;
                
        UPDATE "CTA_CONTRACT_REQUESTS_ASSIGNED"  
        SET "STATUS" = :LV_NEW_STATUS, "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;


        LV_SUCCESS_MSG := 'Lineitems submitted successfully for: ' || :IN_UNIQUE_NAME;
        LV_SUCCESS_FLAG := true;

    ELSEIF ( :IN_ACTION = 'SEND_BACK') THEN

        LV_EVENT_CODE := 3;
        LV_NEW_STATUS := 2;
        LV_REMARK := 'CR sent back to Supplier';

        UPDATE "CTA_CONTRACT_REQUESTS_ASSIGNED" 
        SET "STATUS" = :LV_NEW_STATUS, "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        LV_SUCCESS_MSG := :IN_UNIQUE_NAME || ' sent back successfully';
        LV_SUCCESS_FLAG := true;

    ELSEIF ( :IN_ACTION = 'BUYER_APPROVAL') THEN

        LV_EVENT_CODE := 4;
        LV_NEW_STATUS := 4;
        LV_REMARK := 'CR approved by Buyer';

        UPDATE "CTA_CONTRACT_REQUESTS_ASSIGNED" 
        SET "STATUS" = :LV_NEW_STATUS, "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        LV_SUCCESS_MSG := :IN_UNIQUE_NAME || ' approved successfully';
        LV_SUCCESS_FLAG := true;

    ELSEIF ( :IN_ACTION = 'PUBLISH') THEN

        LV_EVENT_CODE := 5;
        LV_NEW_STATUS := 5;
        LV_REMARK := 'CR published by Buyer';

        UPDATE "CTA_CONTRACT_REQUESTS_ASSIGNED" 
        SET "STATUS" = :LV_NEW_STATUS, "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        LV_SUCCESS_MSG := :IN_UNIQUE_NAME || ' published successfully';
        LV_SUCCESS_FLAG := true;

    ELSEIF ( :IN_ACTION = 'DELETE_CR_DATA') THEN
        DELETE FROM "CTA_CR_LINEITEMS" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
        
        DELETE FROM "CTA_CR_LINEITEM_ACCOUNTING" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        DELETE FROM "CTA_PRICINGTERMS_PRICING_INFO" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        DELETE FROM "CTA_CONTRACT_REQUESTS_ASSIGNED" 
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        DELETE FROM "CTA_CONTRACT_REQUESTS_EVENTS_LOG" WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;
        COMMIT;
        LV_SUCCESS_MSG := :IN_UNIQUE_NAME || ' deleted successfully';
        LV_SUCCESS_FLAG := true;

    END IF;
    -- Final commit and event capture
    IF ( :LV_SUCCESS_FLAG = true AND :IN_ACTION != 'DELETE_CR_DATA' ) THEN
        SELECT COUNT(*) into LV_CR_LOG_COUNT FROM "CTA_CONTRACT_REQUESTS_EVENTS_LOG" 
        WHERE "UNIQUE_NAME" = :IN_UNIQUE_NAME;

        LV_EVENT_NO := :LV_CR_LOG_COUNT + 1;

        -- Insert into Events Log:	

        
        INSERT INTO "CTA_CONTRACT_REQUESTS_EVENTS_LOG"  
        (
            "UNIQUE_NAME","EVENT_NO","EVENT_CODE","EVENT_TYPE","USER_ID","USER_NAME","REMARK","COMMENT","CREATED_ON"
        )
        SELECT 	:IN_UNIQUE_NAME,:LV_EVENT_NO,:LV_EVENT_CODE,"EVENT_TYPE","USER_ID","USER_NAME",:LV_REMARK,"COMMENT",:LV_CURR_TIMESTAMP
        FROM :ST_CR_LOG;

        COMMIT;

    END IF;
    OUT_SUCCESS := :LV_SUCCESS_MSG;

	
END

